#!/bin/zsh

export DEV_DESKTOP_HOST=dev-dsk-etarn-2b-1cd22a6f.us-west-2.amazon.com
export BRAZIL_WORKSPACE=workspaces/brazil
export WS=$HOME/workspaces

export SAM_ACCOUNT=$AWS_ACCOUNT_ID
export SAM_ISENGARD_ROLE_NAME=Admin
export SAM_REGION=us-west-2
export SAM_AWS_PARTITION=aws

export AWS_DEV_1=767520670908
export AWS_DEV_2=454269956186

scp_dev() {
  scp -r $DEV_DESKTOP_HOST:$@
}

dev_tunnel() {
  ssh -L "$1":localhost:"$1" $DEV_DESKTOP_HOST -f -N
}

aws_login() {
  ACCOUNT=${1:-$(aws_account)}
  ROLE=${2:-Admin}
  open "https://isengard.amazon.com/federate?account=$ACCOUNT&role=$ROLE"
}

alias bb="brazil-build"
alias bbr="brazil-build release"
alias bbt="brazil-build test"
alias bbc="brazil-build clean"
alias bup="brazil ws --use --package"
alias brp="yes | brazil ws --remove --package"
alias bws="brazil ws --sync --metadata"
alias bba="brazil-recursive-cmd brazil-build --allPackages"
alias sam="brazil-build-tool-exec sam"
alias deveks="aws eks --endpoint $WESLEY_DEV_FRONTEND_API_GATEWAY_URL"

export PATH=/apollo/env/envImprovement/bin:$PATH
export PATH=/apollo/env/SDETools/bin:$PATH
export PATH=$HOME/.toolbox/bin:$PATH

export AUTH_HOST=$DEV_DESKTOP_HOST

if [[ $(uname) != 'Darwin' ]]; then
  return 0
fi

# Authentication Setup
MIDWAY_TIMEOUT_SECONDS=57600 # 16 hours
if ! test $(find ~/.ssh/id_ecdsa-cert.pub -mtime -${MIDWAY_TIMEOUT_SECONDS}s); then
  mwinit -f
fi
